.. index:: pair: class; Sophus::RxSO3Base
.. _doxid-class_sophus_1_1_rx_s_o3_base:

template class Sophus::RxSO3Base
================================

.. toctree::
	:hidden:

	struct_Sophus_RxSO3Base_TangentAndTheta.rst

Overview
~~~~~~~~

:ref:`RxSO3 <doxid-class_sophus_1_1_rx_s_o3>` base type - implements :ref:`RxSO3 <doxid-class_sophus_1_1_rx_s_o3>` class but is storage agnostic. :ref:`More...<details-class_sophus_1_1_rx_s_o3_base>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <rxso3.hpp>
	
	template <class Derived>
	class RxSO3Base {
	public:
		// typedefs
	
		using :target:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>` = typename Eigen::internal::traits<Derived>:::ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>` ;
		using :target:`QuaternionType<doxid-class_sophus_1_1_rx_s_o3_base_1a34f283eda749d7494366cb782cef63ee>` = typename Eigen::internal::traits<Derived>:::ref:`QuaternionType<doxid-class_sophus_1_1_rx_s_o3_base_1a34f283eda749d7494366cb782cef63ee>` ;
		using :target:`QuaternionTemporaryType<doxid-class_sophus_1_1_rx_s_o3_base_1a4295d0979cde977197e746260b03993a>` = Eigen::Quaternion<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>`, :ref:`Options<doxid-class_sophus_1_1_rx_s_o3_base_1a5682f0aa85dac49e2b20198122d78d61>`> ;
		using :target:`Transformation<doxid-class_sophus_1_1_rx_s_o3_base_1aee2958a758e4940a5b9b927a58daf8e0>` = :ref:`Matrix<doxid-namespace_sophus_1a6da48bb60b569fdd4619fcd8f5fb2498>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>`, :ref:`N<doxid-class_sophus_1_1_rx_s_o3_base_1ac2b959307e5b5ce7ef11f087021031d1>`, :ref:`N<doxid-class_sophus_1_1_rx_s_o3_base_1ac2b959307e5b5ce7ef11f087021031d1>`> ;
		using :target:`Point<doxid-class_sophus_1_1_rx_s_o3_base_1a1cb7406181b18451e9f7e63beb3db6e1>` = :ref:`Vector3<doxid-namespace_sophus_1ade8af1bfa6ef21fdd15e6a3a89929be5>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>`> ;
		using :target:`HomogeneousPoint<doxid-class_sophus_1_1_rx_s_o3_base_1ab945fe60e00270f94f298a1f26257801>` = :ref:`Vector4<doxid-namespace_sophus_1a2f54b15372bfd1bb0c34464ad61a77c6>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>`> ;
		using :target:`Line<doxid-class_sophus_1_1_rx_s_o3_base_1a4d02a657ad41e5296705fc2ca66aee67>` = :ref:`ParametrizedLine3<doxid-namespace_sophus_1a24633b90a69ca83ad90d833e11e59dd9>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>`> ;
		using :target:`Tangent<doxid-class_sophus_1_1_rx_s_o3_base_1aca5a75b2238ad6d68ae9b7a3a7e82afe>` = :ref:`Vector<doxid-namespace_sophus_1abf9f6f1b37fa7bef4d2df65d63154cdf>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>`, :ref:`DoF<doxid-class_sophus_1_1_rx_s_o3_base_1aeb4c02bad224acb2ea860d55b2a5e89f>`> ;
		using :target:`Adjoint<doxid-class_sophus_1_1_rx_s_o3_base_1a872a2a4fd9dc5e929c538c57f2f169a8>` = :ref:`Matrix<doxid-namespace_sophus_1a6da48bb60b569fdd4619fcd8f5fb2498>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>`, :ref:`DoF<doxid-class_sophus_1_1_rx_s_o3_base_1aeb4c02bad224acb2ea860d55b2a5e89f>`, :ref:`DoF<doxid-class_sophus_1_1_rx_s_o3_base_1aeb4c02bad224acb2ea860d55b2a5e89f>`> ;
		using :ref:`ReturnScalar<doxid-class_sophus_1_1_rx_s_o3_base_1a3995bc28a4ebcc336c22f51cc65f5d0b>` = typename Eigen::ScalarBinaryOpTraits<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>`, typename OtherDerived::Scalar>::ReturnType ;
		using :target:`RxSO3Product<doxid-class_sophus_1_1_rx_s_o3_base_1ae9f3ee03deb0a1ae6bf0d861951b9e81>` = :ref:`RxSO3<doxid-class_sophus_1_1_rx_s_o3>`<:ref:`ReturnScalar<doxid-class_sophus_1_1_rx_s_o3_base_1a3995bc28a4ebcc336c22f51cc65f5d0b>`<OtherDerived>> ;
		using :target:`PointProduct<doxid-class_sophus_1_1_rx_s_o3_base_1a39b58c7c892d087ab921e33bc5f7b6f7>` = :ref:`Vector3<doxid-namespace_sophus_1ade8af1bfa6ef21fdd15e6a3a89929be5>`<:ref:`ReturnScalar<doxid-class_sophus_1_1_rx_s_o3_base_1a3995bc28a4ebcc336c22f51cc65f5d0b>`<PointDerived>> ;
		using :target:`HomogeneousPointProduct<doxid-class_sophus_1_1_rx_s_o3_base_1abd6d90f0b93c5be5e915aa0a12a880e3>` = :ref:`Vector4<doxid-namespace_sophus_1a2f54b15372bfd1bb0c34464ad61a77c6>`<:ref:`ReturnScalar<doxid-class_sophus_1_1_rx_s_o3_base_1a3995bc28a4ebcc336c22f51cc65f5d0b>`<HPointDerived>> ;

		// structs
	
		struct :ref:`TangentAndTheta<doxid-struct_sophus_1_1_rx_s_o3_base_1_1_tangent_and_theta>`;

		// fields
	
		static constexpr int :target:`Options<doxid-class_sophus_1_1_rx_s_o3_base_1a5682f0aa85dac49e2b20198122d78d61>` = Eigen::internal::traits<Derived>::Options;
		static int constexpr :ref:`DoF<doxid-class_sophus_1_1_rx_s_o3_base_1aeb4c02bad224acb2ea860d55b2a5e89f>` = 4;
		static int constexpr :ref:`num_parameters<doxid-class_sophus_1_1_rx_s_o3_base_1a7b9a2297fe05926593147d9eefbd2950>` = 4;
		static int constexpr :ref:`N<doxid-class_sophus_1_1_rx_s_o3_base_1ac2b959307e5b5ce7ef11f087021031d1>` = 3;

		// methods
	
		:ref:`Adjoint<doxid-class_sophus_1_1_rx_s_o3_base_1a872a2a4fd9dc5e929c538c57f2f169a8>` :ref:`Adj<doxid-class_sophus_1_1_rx_s_o3_base_1abb1cb184c1b7350ed183910ec5f2f6c0>`() const;
	
		template <class NewScalarType>
		:ref:`RxSO3<doxid-class_sophus_1_1_rx_s_o3>`<NewScalarType> :ref:`cast<doxid-class_sophus_1_1_rx_s_o3_base_1ac20b6d66bed6de320383941678f2548f>`() const;
	
		:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>`* :ref:`data<doxid-class_sophus_1_1_rx_s_o3_base_1aca62d6630ee926988f60dccab49103cc>`();
		:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>` const* :ref:`data<doxid-class_sophus_1_1_rx_s_o3_base_1afd0a3697d0688c7c9d4014fcfb232a24>`() const;
		:ref:`RxSO3<doxid-class_sophus_1_1_rx_s_o3>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>`> :ref:`inverse<doxid-class_sophus_1_1_rx_s_o3_base_1a9a4151d99aa72aea40f0ddd9d2d5cd2d>`() const;
		:ref:`Tangent<doxid-class_sophus_1_1_rx_s_o3_base_1aca5a75b2238ad6d68ae9b7a3a7e82afe>` :ref:`log<doxid-class_sophus_1_1_rx_s_o3_base_1af95a11ea6f47d435c0aa46e7bdb5548e>`() const;
		:ref:`TangentAndTheta<doxid-struct_sophus_1_1_rx_s_o3_base_1_1_tangent_and_theta>` :ref:`logAndTheta<doxid-class_sophus_1_1_rx_s_o3_base_1a6ecc69515bf8a81991061dff63f44343>`() const;
		:ref:`Transformation<doxid-class_sophus_1_1_rx_s_o3_base_1aee2958a758e4940a5b9b927a58daf8e0>` :ref:`matrix<doxid-class_sophus_1_1_rx_s_o3_base_1aab88a2cd2ae8c1a38dfaa5044f5ac37e>`() const;
	
		template <class OtherDerived>
		RxSO3Base<Derived>& :ref:`operator=<doxid-class_sophus_1_1_rx_s_o3_base_1a469ebe9d215e9f0ab151d0a492d77dfe>`(RxSO3Base<OtherDerived> const& other);
	
		template <typename OtherDerived>
		:ref:`RxSO3Product<doxid-class_sophus_1_1_rx_s_o3_base_1ae9f3ee03deb0a1ae6bf0d861951b9e81>`<OtherDerived> :ref:`operator*<doxid-class_sophus_1_1_rx_s_o3_base_1a6e2065de202c60407e6124b32d9e7ed2>`(RxSO3Base<OtherDerived> const& other) const;
	
		template <
			typename PointDerived,
			typename = typename std::enable_if<IsFixedSizeVector<PointDerived, 3>::value>::type
			>
		:ref:`PointProduct<doxid-class_sophus_1_1_rx_s_o3_base_1a39b58c7c892d087ab921e33bc5f7b6f7>`<PointDerived> :ref:`operator*<doxid-class_sophus_1_1_rx_s_o3_base_1a3713fd7472f53c5affb266788774ec91>`(Eigen::MatrixBase<PointDerived> const& p) const;
	
		template <
			typename HPointDerived,
			typename = typename std::enable_if<IsFixedSizeVector<HPointDerived, 4>::value>::type
			>
		:ref:`HomogeneousPointProduct<doxid-class_sophus_1_1_rx_s_o3_base_1abd6d90f0b93c5be5e915aa0a12a880e3>`<HPointDerived> :ref:`operator*<doxid-class_sophus_1_1_rx_s_o3_base_1ab1f03c767fa5205e4efc0af7b71f866b>`(Eigen::MatrixBase<HPointDerived> const& p) const;
	
		:ref:`Line<doxid-class_sophus_1_1_rx_s_o3_base_1a4d02a657ad41e5296705fc2ca66aee67>` :ref:`operator*<doxid-class_sophus_1_1_rx_s_o3_base_1affd31ef210776d862034df16cbf5c41b>`(:ref:`Line<doxid-class_sophus_1_1_rx_s_o3_base_1a4d02a657ad41e5296705fc2ca66aee67>` const& l) const;
	
		template <
			typename OtherDerived,
			typename = typename std::enable_if<std::is_same<Scalar, ReturnScalar<OtherDerived>>::value>::type
			>
		RxSO3Base<Derived>& :ref:`operator*=<doxid-class_sophus_1_1_rx_s_o3_base_1a105c2f189ba581ec646f5be7f425661f>`(RxSO3Base<OtherDerived> const& other);
	
		:ref:`Sophus::Vector<doxid-namespace_sophus_1abf9f6f1b37fa7bef4d2df65d63154cdf>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>`, :ref:`num_parameters<doxid-class_sophus_1_1_rx_s_o3_base_1a7b9a2297fe05926593147d9eefbd2950>`> :ref:`params<doxid-class_sophus_1_1_rx_s_o3_base_1a48975013f8950e114366bf8bb41ca6c2>`() const;
		void :ref:`setQuaternion<doxid-class_sophus_1_1_rx_s_o3_base_1a8a52b7f3d5578d118492d3c7a9e12868>`(Eigen::Quaternion<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>`> const& quat);
		:ref:`QuaternionType<doxid-class_sophus_1_1_rx_s_o3_base_1a34f283eda749d7494366cb782cef63ee>` const& :ref:`quaternion<doxid-class_sophus_1_1_rx_s_o3_base_1a110bf303e0796a15774f70f2db41e1f1>`() const;
		:ref:`Transformation<doxid-class_sophus_1_1_rx_s_o3_base_1aee2958a758e4940a5b9b927a58daf8e0>` :ref:`rotationMatrix<doxid-class_sophus_1_1_rx_s_o3_base_1aae3bf5e115fc70a869d33a872d11f27f>`() const;
		:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>` :ref:`scale<doxid-class_sophus_1_1_rx_s_o3_base_1a2d3188d08822594cfa110b423f32bc53>`() const;
		void :ref:`setRotationMatrix<doxid-class_sophus_1_1_rx_s_o3_base_1a623bae3b159ad965dd49c463cd636f16>`(:ref:`Transformation<doxid-class_sophus_1_1_rx_s_o3_base_1aee2958a758e4940a5b9b927a58daf8e0>` const& R);
		void :ref:`setScale<doxid-class_sophus_1_1_rx_s_o3_base_1a3a59b89355170559f94084d27e3e2cc0>`(:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>` const& scale);
		void :ref:`setScaledRotationMatrix<doxid-class_sophus_1_1_rx_s_o3_base_1a9fdc22c59df2048835f1eafca95db9ef>`(:ref:`Transformation<doxid-class_sophus_1_1_rx_s_o3_base_1aee2958a758e4940a5b9b927a58daf8e0>` const& sR);
		void :ref:`setSO3<doxid-class_sophus_1_1_rx_s_o3_base_1a2f13479cc98bda051748db7c3fe23f54>`(:ref:`SO3<doxid-class_sophus_1_1_s_o3>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>`> const& so3);
		:ref:`SO3<doxid-class_sophus_1_1_s_o3>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>`> :target:`so3<doxid-class_sophus_1_1_rx_s_o3_base_1a0ed88eed50bd72dbcad1c428b7b4a04f>`() const;
	};

	// direct descendants

	template <class Scalar_, int Options>
	class :ref:`RxSO3<doxid-class_sophus_1_1_rx_s_o3>`;
.. _details-class_sophus_1_1_rx_s_o3_base:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

:ref:`RxSO3 <doxid-class_sophus_1_1_rx_s_o3>` base type - implements :ref:`RxSO3 <doxid-class_sophus_1_1_rx_s_o3>` class but is storage agnostic.

This class implements the group ``R+ x SO(3)``, the direct product of the group of positive scalar 3x3 matrices (= isomorph to the positive real numbers) and the three-dimensional special orthogonal group SO(3). Geometrically, it is the group of rotation and scaling in three dimensions. As a matrix groups, :ref:`RxSO3 <doxid-class_sophus_1_1_rx_s_o3>` consists of matrices of the form ``s * R`` where ``R`` is an orthogonal matrix with ``det(R)=1`` and ``s > 0`` being a positive real number.

Internally, :ref:`RxSO3 <doxid-class_sophus_1_1_rx_s_o3>` is represented by the group of non-zero quaternions. In particular, the scale equals the squared(!) norm of the quaternion ``q``, ``s = |q|^2``. This is a most compact representation since the degrees of freedom (DoF) of :ref:`RxSO3 <doxid-class_sophus_1_1_rx_s_o3>` (=4) equals the number of internal parameters (=4).

This class has the explicit class invariant that the scale ``s`` is not too close to either zero or infinity. Strictly speaking, it must hold that:

``:ref:`quaternion() <doxid-class_sophus_1_1_rx_s_o3_base_1a110bf303e0796a15774f70f2db41e1f1>`.:ref:`squaredNorm() <doxid-namespace_sophus_1aceb4e371d61285afa207cdbd705242f1>` >= :ref:`Constants::epsilon() <doxid-struct_sophus_1_1_constants_1ac5316f138cd8a1ecead291582717d9e1>``` and ``1. / :ref:`quaternion() <doxid-class_sophus_1_1_rx_s_o3_base_1a110bf303e0796a15774f70f2db41e1f1>`.:ref:`squaredNorm() <doxid-namespace_sophus_1aceb4e371d61285afa207cdbd705242f1>` >= :ref:`Constants::epsilon() <doxid-struct_sophus_1_1_constants_1ac5316f138cd8a1ecead291582717d9e1>```.

In order to obey this condition, group multiplication is implemented with saturation such that a product always has a scale which is equal or greater this threshold.

Typedefs
--------

.. index:: pair: typedef; ReturnScalar
.. _doxid-class_sophus_1_1_rx_s_o3_base_1a3995bc28a4ebcc336c22f51cc65f5d0b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	using ReturnScalar = typename Eigen::ScalarBinaryOpTraits<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>`, typename OtherDerived::Scalar>::ReturnType 

For binary operations the return type is determined with the ScalarBinaryOpTraits feature of :ref:`Eigen <doxid-namespace_eigen>`. This allows mixing concrete and Map types, as well as other compatible scalar types such as Ceres::Jet and double scalars with :ref:`RxSO3 <doxid-class_sophus_1_1_rx_s_o3>` operations.

Fields
------

.. index:: pair: variable; DoF
.. _doxid-class_sophus_1_1_rx_s_o3_base_1aeb4c02bad224acb2ea860d55b2a5e89f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static int constexpr DoF = 4

Degrees of freedom of manifold, number of dimensions in tangent space (three for rotation and one for scaling).

.. index:: pair: variable; num_parameters
.. _doxid-class_sophus_1_1_rx_s_o3_base_1a7b9a2297fe05926593147d9eefbd2950:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static int constexpr num_parameters = 4

Number of internal parameters used (quaternion is a 4-tuple).

.. index:: pair: variable; N
.. _doxid-class_sophus_1_1_rx_s_o3_base_1ac2b959307e5b5ce7ef11f087021031d1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static int constexpr N = 3

Group transformations are 3x3 matrices.

Methods
-------

.. index:: pair: function; Adj
.. _doxid-class_sophus_1_1_rx_s_o3_base_1abb1cb184c1b7350ed183910ec5f2f6c0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Adjoint<doxid-class_sophus_1_1_rx_s_o3_base_1a872a2a4fd9dc5e929c538c57f2f169a8>` Adj() const

Adjoint transformation.

This function return the adjoint transformation ``Ad`` of the group element ``A`` such that for all ``x`` it holds that ``hat(Ad_A * x) = A * hat(x) A^{-1}``. See hat-operator below.

For RxSO(3), it simply returns the rotation matrix corresponding to ``A``.

.. index:: pair: function; cast
.. _doxid-class_sophus_1_1_rx_s_o3_base_1ac20b6d66bed6de320383941678f2548f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <class NewScalarType>
	:ref:`RxSO3<doxid-class_sophus_1_1_rx_s_o3>`<NewScalarType> cast() const

Returns copy of instance casted to NewScalarType.

.. index:: pair: function; data
.. _doxid-class_sophus_1_1_rx_s_o3_base_1aca62d6630ee926988f60dccab49103cc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>`* data()

This provides unsafe read/write access to internal data. RxSO(3) is represented by an Eigen::Quaternion (four parameters). When using direct write access, the user needs to take care of that the quaternion is not set close to zero.

Note: The first three Scalars represent the imaginary parts, while the forth Scalar represent the real part.

.. index:: pair: function; data
.. _doxid-class_sophus_1_1_rx_s_o3_base_1afd0a3697d0688c7c9d4014fcfb232a24:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>` const* data() const

Const version of :ref:`data() <doxid-class_sophus_1_1_rx_s_o3_base_1aca62d6630ee926988f60dccab49103cc>` above.

.. index:: pair: function; inverse
.. _doxid-class_sophus_1_1_rx_s_o3_base_1a9a4151d99aa72aea40f0ddd9d2d5cd2d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`RxSO3<doxid-class_sophus_1_1_rx_s_o3>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>`> inverse() const

Returns group inverse.

.. index:: pair: function; log
.. _doxid-class_sophus_1_1_rx_s_o3_base_1af95a11ea6f47d435c0aa46e7bdb5548e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Tangent<doxid-class_sophus_1_1_rx_s_o3_base_1aca5a75b2238ad6d68ae9b7a3a7e82afe>` log() const

Logarithmic map.

Computes the logarithm, the inverse of the group exponential which maps element of the group (scaled rotation matrices) to elements of the tangent space (rotation-vector plus logarithm of scale factor).

To be specific, this function computes ``vee(logmat(.))`` with ``logmat(.)`` being the matrix logarithm and ``vee(.)`` the vee-operator of :ref:`RxSO3 <doxid-class_sophus_1_1_rx_s_o3>`.

.. index:: pair: function; logAndTheta
.. _doxid-class_sophus_1_1_rx_s_o3_base_1a6ecc69515bf8a81991061dff63f44343:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`TangentAndTheta<doxid-struct_sophus_1_1_rx_s_o3_base_1_1_tangent_and_theta>` logAndTheta() const

As above, but also returns ``theta = |omega|``.

.. index:: pair: function; matrix
.. _doxid-class_sophus_1_1_rx_s_o3_base_1aab88a2cd2ae8c1a38dfaa5044f5ac37e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Transformation<doxid-class_sophus_1_1_rx_s_o3_base_1aee2958a758e4940a5b9b927a58daf8e0>` matrix() const

Returns 3x3 matrix representation of the instance.

For :ref:`RxSO3 <doxid-class_sophus_1_1_rx_s_o3>`, the matrix representation is an scaled orthogonal matrix ``sR`` with ``det(R)=s^3``, thus a scaled rotation matrix ``R`` with scale ``s``.

.. index:: pair: function; operator=
.. _doxid-class_sophus_1_1_rx_s_o3_base_1a469ebe9d215e9f0ab151d0a492d77dfe:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <class OtherDerived>
	RxSO3Base<Derived>& operator=(RxSO3Base<OtherDerived> const& other)

Assignment-like operator from OtherDerived.

.. index:: pair: function; operator*
.. _doxid-class_sophus_1_1_rx_s_o3_base_1a6e2065de202c60407e6124b32d9e7ed2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename OtherDerived>
	:ref:`RxSO3Product<doxid-class_sophus_1_1_rx_s_o3_base_1ae9f3ee03deb0a1ae6bf0d861951b9e81>`<OtherDerived> operator*(RxSO3Base<OtherDerived> const& other) const

Group multiplication, which is rotation concatenation and scale multiplication.

Note: This function performs saturation for products close to zero in order to ensure the class invariant.

.. index:: pair: function; operator*
.. _doxid-class_sophus_1_1_rx_s_o3_base_1a3713fd7472f53c5affb266788774ec91:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename PointDerived,
		typename = typename std::enable_if<IsFixedSizeVector<PointDerived, 3>::value>::type
		>
	:ref:`PointProduct<doxid-class_sophus_1_1_rx_s_o3_base_1a39b58c7c892d087ab921e33bc5f7b6f7>`<PointDerived> operator*(Eigen::MatrixBase<PointDerived> const& p) const

Group action on 3-points.

This function rotates a 3 dimensional point ``p`` by the :ref:`SO3 <doxid-class_sophus_1_1_s_o3>` element ``bar_R_foo`` (= rotation matrix) and scales it by the scale factor ``s`` :

``p_bar = s * (bar_R_foo * p_foo)``.

.. index:: pair: function; operator*
.. _doxid-class_sophus_1_1_rx_s_o3_base_1ab1f03c767fa5205e4efc0af7b71f866b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename HPointDerived,
		typename = typename std::enable_if<IsFixedSizeVector<HPointDerived, 4>::value>::type
		>
	:ref:`HomogeneousPointProduct<doxid-class_sophus_1_1_rx_s_o3_base_1abd6d90f0b93c5be5e915aa0a12a880e3>`<HPointDerived> operator*(Eigen::MatrixBase<HPointDerived> const& p) const

Group action on homogeneous 3-points. See above for more details.

.. index:: pair: function; operator*
.. _doxid-class_sophus_1_1_rx_s_o3_base_1affd31ef210776d862034df16cbf5c41b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Line<doxid-class_sophus_1_1_rx_s_o3_base_1a4d02a657ad41e5296705fc2ca66aee67>` operator*(:ref:`Line<doxid-class_sophus_1_1_rx_s_o3_base_1a4d02a657ad41e5296705fc2ca66aee67>` const& l) const

Group action on lines.

This function rotates a parametrized line ``l(t) = o + t * d`` by the :ref:`SO3 <doxid-class_sophus_1_1_s_o3>` element ans scales it by the scale factor:

Origin ``o`` is rotated and scaled Direction ``d`` is rotated (preserving it's norm)

.. index:: pair: function; operator*=
.. _doxid-class_sophus_1_1_rx_s_o3_base_1a105c2f189ba581ec646f5be7f425661f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename OtherDerived,
		typename = typename std::enable_if<std::is_same<Scalar, ReturnScalar<OtherDerived>>::value>::type
		>
	RxSO3Base<Derived>& operator*=(RxSO3Base<OtherDerived> const& other)

In-place group multiplication. This method is only valid if the return type of the multiplication is compatible with this :ref:`SO3 <doxid-class_sophus_1_1_s_o3>` 's Scalar type.

Note: This function performs saturation for products close to zero in order to ensure the class invariant.

.. index:: pair: function; params
.. _doxid-class_sophus_1_1_rx_s_o3_base_1a48975013f8950e114366bf8bb41ca6c2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Sophus::Vector<doxid-namespace_sophus_1abf9f6f1b37fa7bef4d2df65d63154cdf>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>`, :ref:`num_parameters<doxid-class_sophus_1_1_rx_s_o3_base_1a7b9a2297fe05926593147d9eefbd2950>`> params() const

Returns internal parameters of RxSO(3).

It returns (q.imag[0], q.imag[1], q.imag[2], q.real), with q being the quaternion.

.. index:: pair: function; setQuaternion
.. _doxid-class_sophus_1_1_rx_s_o3_base_1a8a52b7f3d5578d118492d3c7a9e12868:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void setQuaternion(Eigen::Quaternion<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>`> const& quat)

Sets non-zero quaternion.

Precondition: ``quat`` must not be close to either zero or infinity

.. index:: pair: function; quaternion
.. _doxid-class_sophus_1_1_rx_s_o3_base_1a110bf303e0796a15774f70f2db41e1f1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`QuaternionType<doxid-class_sophus_1_1_rx_s_o3_base_1a34f283eda749d7494366cb782cef63ee>` const& quaternion() const

Accessor of quaternion.

.. index:: pair: function; rotationMatrix
.. _doxid-class_sophus_1_1_rx_s_o3_base_1aae3bf5e115fc70a869d33a872d11f27f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Transformation<doxid-class_sophus_1_1_rx_s_o3_base_1aee2958a758e4940a5b9b927a58daf8e0>` rotationMatrix() const

Returns rotation matrix.

.. index:: pair: function; scale
.. _doxid-class_sophus_1_1_rx_s_o3_base_1a2d3188d08822594cfa110b423f32bc53:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>` scale() const

Returns scale.

.. index:: pair: function; setRotationMatrix
.. _doxid-class_sophus_1_1_rx_s_o3_base_1a623bae3b159ad965dd49c463cd636f16:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void setRotationMatrix(:ref:`Transformation<doxid-class_sophus_1_1_rx_s_o3_base_1aee2958a758e4940a5b9b927a58daf8e0>` const& R)

Setter of quaternion using rotation matrix ``R``, leaves scale as is.

.. index:: pair: function; setScale
.. _doxid-class_sophus_1_1_rx_s_o3_base_1a3a59b89355170559f94084d27e3e2cc0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void setScale(:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>` const& scale)

Sets scale and leaves rotation as is.

Note: This function as a significant computational cost, since it has to call the square root twice.

.. index:: pair: function; setScaledRotationMatrix
.. _doxid-class_sophus_1_1_rx_s_o3_base_1a9fdc22c59df2048835f1eafca95db9ef:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void setScaledRotationMatrix(:ref:`Transformation<doxid-class_sophus_1_1_rx_s_o3_base_1aee2958a758e4940a5b9b927a58daf8e0>` const& sR)

Setter of quaternion using scaled rotation matrix ``sR``.

Precondition: The 3x3 matrix must be "scaled orthogonal" and have a positive determinant.

.. index:: pair: function; setSO3
.. _doxid-class_sophus_1_1_rx_s_o3_base_1a2f13479cc98bda051748db7c3fe23f54:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void setSO3(:ref:`SO3<doxid-class_sophus_1_1_s_o3>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o3_base_1a84f85da7323c2fcec1a2ec91716544c1>`> const& so3)

Setter of SO(3) rotations, leaves scale as is.

